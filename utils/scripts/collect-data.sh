#!/usr/bin/env bash
#
# ------------------------------------------------------------------------------
# This script gathers all data in a given data directory into a single master
# file.
#
# Usage:
# collect-data.sh
#   --data_dir_path <full path>
#   --file_pattern <file name with data to be collected>
#   --output_file_path <file path to which the data will be written>
#   [help]
#
# Usage examples:
#
# * Gather all data generated by EvoSuite
#  bash collect-data.sh \
#    --data_dir_path "$SCRIPT_DIR/../../test-generation/data/generated/evosuite-vanilla/reports" \
#    --file_pattern "statistics.csv" \
#    --output_file_path "$SCRIPT_DIR/../../test-generation/data/generated/evosuite-vanilla-test-generation-data.csv"
#
# ------------------------------------------------------------------------------

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" > /dev/null 2>&1 && pwd)"
source "$SCRIPT_DIR/utils.sh" || exit 1

# ------------------------------------------------------------------------- Args

USAGE="Usage: ${BASH_SOURCE[0]} \
  --data_dir_path <full path> \
  --file_pattern <file name with data to be collected> \
  --output_file_path <file path to which the data will be written> \
  [help]"
if [ "$#" -ne "1" ] && [ "$#" -ne "6" ]; then
  die "$USAGE"
fi

DATA_DIR_PATH=""
FILE_PATTERN=""
OUTPUT_FILE_PATH=""

while [[ "$1" = --* ]]; do
  OPTION=$1; shift
  case $OPTION in
    (--data_dir_path)
      DATA_DIR_PATH=$1;
      shift;;
    (--file_pattern)
      FILE_PATTERN=$1;
      shift;;
    (--output_file_path)
      OUTPUT_FILE_PATH=$1;
      shift;;
    (--help)
      echo "$USAGE"
      exit 0
    (*)
      die "$USAGE";;
  esac
done

# Check whether all arguments have been initialized
[ "$DATA_DIR_PATH" != "" ]    || die "[ERROR] Missing --data_dir_path argument!"
[ "$FILE_PATTERN" != "" ]     || die "[ERROR] Missing --file_pattern argument!"
[ "$OUTPUT_FILE_PATH" != "" ] || die "[ERROR] Missing --output_file_path argument!"

# Check whether required directories/files do exist
[ -d "$DATA_DIR_PATH" ]       || die "[ERROR] $DATA_DIR_PATH does not exist!"

# ------------------------------------------------------------------------- Main

# Get header
find "$DATA_DIR_PATH" -type f -name "$FILE_PATTERN" | head -n1 | xargs head -n1 > "$OUTPUT_FILE_PATH"
# Get content
find "$DATA_DIR_PATH" -type f -name "$FILE_PATTERN" -exec tail -n +2 {} \; | sort -t ',' -k1,2 >> "$OUTPUT_FILE_PATH"
# Fix line break, it required
fix_line_break "$OUTPUT_FILE_PATH" || die

echo "DONE!"
exit 0

# EOF
